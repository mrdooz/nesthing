#pragma once

#include "nesthing.hpp"
namespace nes
{
  enum OpCode : u8
  {
    BRK        = 0x00,
    ORA_X_IND  = 0x01,
    ORA_ZPG    = 0x05,
    ASL_ZPG    = 0x06,
    PHP        = 0x08,
    ORA_IMM    = 0x09,
    ASL_A      = 0x0a,
    ORA_ABS    = 0x0d,
    ASL_ABS    = 0x0e,
    BPL_REL    = 0x10,
    ORA_IND_Y  = 0x11,
    ORA_ZPG_X  = 0x15,
    ASL_ZPG_X  = 0x16,
    CLC        = 0x18,
    ORA_ABS_Y  = 0x19,
    ORA_ABS_X  = 0x1d,
    ASL_ABS_X  = 0x1e,
    JSR_ABS    = 0x20,
    AND_X_IND  = 0x21,
    BIT_ZPG    = 0x24,
    AND_ZPG    = 0x25,
    ROL_ZPG    = 0x26,
    PLP        = 0x28,
    AND_IMM    = 0x29,
    ROL_A      = 0x2a,
    BIT_ABS    = 0x2c,
    AND_ABS    = 0x2d,
    ROL_ABS    = 0x2e,
    BMI_REL    = 0x30,
    AND_IND_Y  = 0x31,
    AND_ZPG_X  = 0x35,
    ROL_ZPG_X  = 0x36,
    SEC        = 0x38,
    AND_ABS_Y  = 0x39,
    AND_ABS_X  = 0x3d,
    ROL_ABS_X  = 0x3e,
    RTI        = 0x40,
    EOR_X_IND  = 0x41,
    EOR_ZPG    = 0x45,
    LSR_ZPG    = 0x46,
    PHA        = 0x48,
    EOR_IMM    = 0x49,
    LSR_A      = 0x4a,
    JMP_ABS    = 0x4c,
    EOR_ABS    = 0x4d,
    LSR_ABS    = 0x4e,
    BVC_REL    = 0x50,
    EOR_IND_Y  = 0x51,
    EOR_ZPG_X  = 0x55,
    LSR_ZPG_X  = 0x56,
    CLI        = 0x58,
    EOR_ABS_Y  = 0x59,
    EOR_ABS_X  = 0x5d,
    LSR_ABS_X  = 0x5e,
    RTS        = 0x60,
    ADC_X_IND  = 0x61,
    ADC_ZPG    = 0x65,
    ROR_ZPG    = 0x66,
    PLA        = 0x68,
    ADC_IMM    = 0x69,
    ROR_A      = 0x6a,
    JMP_IND    = 0x6c,
    ADC_ABS    = 0x6d,
    ROR_ABS    = 0x6e,
    BVS_REL    = 0x70,
    ADC_IND_Y  = 0x71,
    ADC_ZPG_X  = 0x75,
    ROR_ZPG_X  = 0x76,
    SEI        = 0x78,
    ADC_ABS_Y  = 0x79,
    ADC_ABS_X  = 0x7d,
    ROR_ABS_X  = 0x7e,
    STA_X_IND  = 0x81,
    STY_ZPG    = 0x84,
    STA_ZPG    = 0x85,
    STX_ZPG    = 0x86,
    DEY        = 0x88,
    TXA        = 0x8a,
    STY_ABS    = 0x8c,
    STA_ABS    = 0x8d,
    STX_ABS    = 0x8e,
    BCC_REL    = 0x90,
    STA_IND_Y  = 0x91,
    STY_ZPG_X  = 0x94,
    STA_ZPG_X  = 0x95,
    STX_ZPG_Y  = 0x96,
    TYA        = 0x98,
    STA_ABS_Y  = 0x99,
    TXS        = 0x9a,
    STA_ABS_X  = 0x9d,
    LDY_IMM    = 0xa0,
    LDA_X_IND  = 0xa1,
    LDX_IMM    = 0xa2,
    LDY_ZPG    = 0xa4,
    LDA_ZPG    = 0xa5,
    LDX_ZPG    = 0xa6,
    TAY        = 0xa8,
    LDA_IMM    = 0xa9,
    TAX        = 0xaa,
    LDY_ABS    = 0xac,
    LDA_ABS    = 0xad,
    LDX_ABS    = 0xae,
    BCS_REL    = 0xb0,
    LDA_IND_Y  = 0xb1,
    LDY_ZPG_X  = 0xb4,
    LDA_ZPG_X  = 0xb5,
    LDX_ZPG_Y  = 0xb6,
    CLV        = 0xb8,
    LDA_ABS_Y  = 0xb9,
    TSX        = 0xba,
    LDY_ABS_X  = 0xbc,
    LDA_ABS_X  = 0xbd,
    LDX_ABS_Y  = 0xbe,
    CPY_IMM    = 0xc0,
    CMP_X_IND  = 0xc1,
    CPY_ZPG    = 0xc4,
    CMP_ZPG    = 0xc5,
    DEC_ZPG    = 0xc6,
    INY        = 0xc8,
    CMP_IMM    = 0xc9,
    DEX        = 0xca,
    CPY_ABS    = 0xcc,
    CMP_ABS    = 0xcd,
    DEC_ABS    = 0xce,
    BNE_REL    = 0xd0,
    CMP_IND_Y  = 0xd1,
    CMP_ZPG_X  = 0xd5,
    DEC_ZPG_X  = 0xd6,
    CLD        = 0xd8,
    CMP_ABS_Y  = 0xd9,
    CMP_ABS_X  = 0xdd,
    DEC_ABS_X  = 0xde,
    CPX_IMM    = 0xe0,
    SBC_X_IND  = 0xe1,
    CPX_ZPG    = 0xe4,
    SBC_ZPG    = 0xe5,
    INC_ZPG    = 0xe6,
    INX        = 0xe8,
    SBC_IMM    = 0xe9,
    NOP        = 0xea,
    CPX_ABS    = 0xec,
    SBC_ABS    = 0xed,
    INC_ABS    = 0xee,
    BEQ_REL    = 0xf0,
    SBC_IND_Y  = 0xf1,
    SBC_ZPG_X  = 0xf5,
    INC_ZPG_X  = 0xf6,
    SED        = 0xf8,
    SBC_ABS_Y  = 0xf9,
    SBC_ABS_X  = 0xfd,
    INC_ABS_X  = 0xfe
  };

  enum class AddressingMode
  {
    IMPLIED = 0,
    ACC,
    ABS,
    ABS_X,
    ABS_Y,
    IMM,
    IND,
    X_IND,
    IND_Y,
    REL,
    ZPG,
    ZPG_X,
    ZPG_Y,
  };
}
